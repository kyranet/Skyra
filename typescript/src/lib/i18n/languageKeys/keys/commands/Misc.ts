import type { LanguageHelpDisplayOptions } from '#lib/i18n/LanguageHelp';
import { FT, T, Value } from '#lib/types';

export const AfkDescription = T('commands/misc:afkDescription');
export const AfkExtended = T<LanguageHelpDisplayOptions>('commands/misc:afkExtended');
export const AfkDefault = T('commands/misc:afkDefault');
export const AfkAddedIgnoredChannel = FT<{ channel: string }>('commands/misc:afkAddedIgnoredChannel');
export const AfkClear = FT<{ user: string }>('commands/misc:afkClear');
export const AfkClearAllFailed = FT<{ count: number }>('commands/misc:afkClearAllFailed');
export const AfkClearAllProgress = FT<{ count: number; percentage: number }>('commands/misc:afkClearAllProgress');
export const AfkClearAllStarting = FT<{ count: number }>('commands/misc:afkClearAllStarting');
export const AfkClearAllTitle = T('commands/misc:afkClearAllTitle');
export const AfkClearAllTotal = FT<{ count: number }>('commands/misc:afkClearAllTotal');
export const AfkClearSelf = T('commands/misc:afkClearSelf');
export const AfkListTitle = T('commands/misc:afkListTitle');
export const AfkListFooter = FT<{ count: number }>('commands/misc:afkListFooter');
export const AfkNoEntries = T('commands/misc:afkNoEntries');
export const AfkNotSet = FT<{ user: string }>('commands/misc:afkNotSet');
export const AfkNotSetSelf = T('commands/misc:afkNotSetSelf');
export const AfkPermissionLevelClearAll = T('commands/misc:afkPermissionLevelClearAll');
export const AfkPermissionLevelClearUser = T('commands/misc:afkPermissionLevelClearUser');
export const AfkPermissionLevelList = T('commands/misc:afkPermissionLevelList');
export const AfkPermissionLevelResetUser = T('commands/misc:afkPermissionLevelResetUser');
export const AfkPrefix = T('commands/misc:afkPrefix');
export const AfkRemovedIgnoredChannel = FT<{ channel: string }>('commands/misc:afkRemovedIgnoredChannel');
export const AfkReset = FT<{ user: string }>('commands/misc:afkReset');
export const AfkResetSelf = T('commands/misc:afkResetSelf');
export const AfkSet = T('commands/misc:afkSet');
export const AfkShowFooter = T('commands/misc:afkShowFooter');
export const ChaseDescription = T<string>('commands/misc:chaseDescription');
export const ChaseExtended = T<LanguageHelpDisplayOptions>('commands/misc:chaseExtended');
export const CuddleDescription = T<string>('commands/misc:cuddleDescription');
export const CuddleExtended = T<LanguageHelpDisplayOptions>('commands/misc:cuddleExtended');
export const DeletThisDescription = T<string>('commands/misc:deletthisDescription');
export const DeletThisExtended = T<LanguageHelpDisplayOptions>('commands/misc:deletthisExtended');
export const FDescription = T<string>('commands/misc:fDescription');
export const FExtended = T<LanguageHelpDisplayOptions>('commands/misc:fExtended');
export const FlipDescription = T('commands/misc:flipDescription');
export const FlipExtended = T<LanguageHelpDisplayOptions>('commands/misc:flipExtended');
export const FlipDisabled = T('commands/misc:flipDisabled');
export const FlipOutput = FT<Value>('commands/misc:flipOutput');
export const GoodNightDescription = T<string>('commands/misc:goodnightDescription');
export const GoodNightExtended = T<LanguageHelpDisplayOptions>('commands/misc:goodnightExtended');
export const GoofyTimeDescription = T<string>('commands/misc:goofytimeDescription');
export const GoofyTimeExtended = T<LanguageHelpDisplayOptions>('commands/misc:goofytimeExtended');
export const HugDescription = T<string>('commands/misc:hugDescription');
export const HugExtended = T<LanguageHelpDisplayOptions>('commands/misc:hugExtended');
export const INeedHealingDescription = T<string>('commands/misc:ineedhealingDescription');
export const INeedHealingExtended = T<LanguageHelpDisplayOptions>('commands/misc:ineedhealingExtended');
export const RandRedditAllNsfl = T<string>('commands/misc:randRedditAllNsfl');
export const RandRedditAllNsfw = T<string>('commands/misc:randRedditAllNsfw');
export const RandRedditBanned = T<string>('commands/misc:randRedditBanned');
export const RandRedditDescription = T<string>('commands/misc:randRedditDescription');
export const RandRedditErrorBanned = T<string>('commands/misc:randRedditErrorBanned');
export const RandRedditErrorNotFound = T<string>('commands/misc:randRedditErrorNotFound');
export const RandRedditErrorPrivate = T<string>('commands/misc:randRedditErrorPrivate');
export const RandRedditErrorQuarantined = T<string>('commands/misc:randRedditErrorQuarantined');
export const RandRedditExtended = T<LanguageHelpDisplayOptions>('commands/misc:randRedditExtended');
export const RandRedditFail = T<string>('commands/misc:randRedditFail');
export const RandRedditInvalidArgument = T<string>('commands/misc:randRedditInvalidArgument');
export const RandRedditMessage = FT<{ title: string; author: string; url: string }, string>('commands/misc:randRedditMessage');
export const RedditUserComplexityLevels = T<string[]>('commands/misc:redditUserComplexityLevels');
export const RedditUserData = FT<
	{ user: string; timestamp: number },
	{ overviewFor: string; permalink: string; dataAvailableFor: string; joinedReddit: string }
>('commands/misc:redditUserData');
export const RedditUserDescription = T<string>('commands/misc:redditUserDescription');
export const RedditUserExtended = T<LanguageHelpDisplayOptions>('commands/misc:redditUserExtended');
export const RedditUserInvalidUser = FT<{ user: string }, string>('commands/misc:redditUserInvalidUser');
export const RedditUserQueryFailed = T<string>('commands/misc:redditUserQueryFailed');
export const RedditUserTitles = T<{
	awardGiving: string;
	awardReceiving: string;
	linkKarma: string;
	commentKarma: string;
	totalComments: string;
	totalSubmissions: string;
	commentControversiality: string;
	textComplexity: string;
	top5Subreddits: string;
	bySubmissions: string;
	byComments: string;
	bestComment: string;
	worstComment: string;
}>('commands/misc:redditUserTitles');
export const ResetBirthdayDescription = T<string>('commands/misc:resetBirthdayDescription');
export const ResetBirthdayExtended = T<LanguageHelpDisplayOptions>('commands/misc:resetBirthdayExtended');
export const ResetBirthdaySuccess = FT<{ user: string }, string>('commands/misc:resetBirthdaySuccess');
export const ResetBirthdayNotSet = FT<{ birthDate: number; user: string }, string>('commands/misc:resetBirthdayNotSet');
export const SetBirthdayDescription = T<string>('commands/misc:setBirthdayDescription');
export const SetBirthdayExtended = T<LanguageHelpDisplayOptions>('commands/misc:setBirthdayExtended');
export const SetBirthdayNotConfigured = FT<{ prefix: string }, string>('commands/misc:setBirthdayNotConfigured');
export const SetBirthdayInvalidDate = FT<{ formatWithYear: string; formatWithoutYear: string }, string>('commands/misc:setBirthdayInvalidDate');
export const SetBirthdayInvalidYear = FT<{ parameter: string }, string>('commands/misc:setBirthdayInvalidYear');
export const SetBirthdayInvalidMonth = FT<{ parameter: string }, string>('commands/misc:setBirthdayInvalidMonth');
export const SetBirthdayInvalidDay = FT<{ parameter: string; month: number; year: number }, string>('commands/misc:setBirthdayInvalidDay');
export const SetBirthdayAlreadySet = FT<{ birthDate: string }, string>('commands/misc:setBirthdayAlreadySet');
export const SetBirthdayConfirmation = T<string>('commands/misc:setBirthdayConfirmation');
export const SetBirthdaySuccess = FT<{ nextBirthday: number }, string>('commands/misc:setBirthdaySuccess');
export const ShipData = FT<{ romeoUsername: string; julietUsername: string; shipName: string }, { title: string; description: string }>(
	'commands/misc:shipData'
);
export const ShipDescription = T<string>('commands/misc:shipDescription');
export const ShipExtended = T<LanguageHelpDisplayOptions>('commands/misc:shipExtended');
export const SlapDescription = T<string>('commands/misc:slapDescription');
export const SlapExtended = T<LanguageHelpDisplayOptions>('commands/misc:slapExtended');
export const SlapOwner = T<string>('commands/misc:slapOwner');
export const SnipeDescription = T<string>('commands/misc:snipeDescription');
export const SnipeEmpty = T<string>('commands/misc:snipeEmpty');
export const SnipeExtended = T<LanguageHelpDisplayOptions>('commands/misc:snipeExtended');
export const SnipeTitle = T<string>('commands/misc:snipeTitle');
export const SkyraFactDescription = T<string>('commands/misc:skyrafactDescription');
export const SkyraFactExtended = T<LanguageHelpDisplayOptions>('commands/misc:skyrafactExtended');
export const SkyraFactTitle = T<string>('commands/misc:skyrafactTitle');
export const SkyraFactMessages = T<readonly string[]>('commands/misc:skyrafactMessages');
export const TheSearchDescription = T<string>('commands/misc:thesearchDescription');
export const TheSearchExtended = T<LanguageHelpDisplayOptions>('commands/misc:thesearchExtended');
export const TriggeredDescription = T<string>('commands/misc:triggeredDescription');
export const TriggeredExtended = T<LanguageHelpDisplayOptions>('commands/misc:triggeredExtended');
export const UpvoteDescription = T<string>('commands/misc:upvoteDescription');
export const UpvoteExtended = T<LanguageHelpDisplayOptions>('commands/misc:upvoteExtended');
export const UpvoteMessage = T<string>('commands/misc:upvoteMessage');
export const VaporwaveDescription = T<string>('commands/misc:vaporwaveDescription');
export const VaporwaveExtended = T<LanguageHelpDisplayOptions>('commands/misc:vaporwaveExtended');
export const VaporwaveOutput = FT<{ str: string }, string>('commands/misc:vaporwaveOutput');
export const ViewBirthdayDescription = T<string>('commands/misc:viewBirthdayDescription');
export const ViewBirthdayExtended = T<LanguageHelpDisplayOptions>('commands/misc:viewBirthdayExtended');
export const ViewBirthdaySet = FT<{ user: string }, string>('commands/misc:viewBirthdaySet');
export const ViewBirthdayNotSet = FT<{ birthDate: number; user: string; prefix: string }, string>('commands/misc:viewBirthdayNotSet');
export const UpcomingBirthdaysDescription = T<string>('commands/misc:upcomingBirthdaysDescription');
export const UpcomingBirthdaysExtended = T<LanguageHelpDisplayOptions>('commands/misc:upcomingBirthdaysExtended');
export const UpcomingBirthdaysTitle = FT<{ user: string }, string>('commands/misc:upcomingBirthdaysTitle');
export const UpcomingBirthdaysNone = FT<{ prefix: string }, string>('commands/misc:upcomingBirthdaysNone');
export const ZalgoDescription = T<string>('commands/misc:zalgoDescription');
export const ZalgoExtended = T<LanguageHelpDisplayOptions>('commands/misc:zalgoExtended');
export const ZalgoOutput = FT<{ str: string }, string>('commands/misc:zalgoOutput');
