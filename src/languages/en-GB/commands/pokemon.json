{
	"dragoniteReminder": "",
	"abilityDescription": "Gets data for any given Pokémon ability using my Pokémon dataset.",
	"abilityExtended": {
		"usages": [
			"Ability"
		],
		"extendedHelp": "",
		"explainedUsage": [
			[
				"Ability",
				"The ability for which you want to find data"
			]
		],
		"examples": [
			"multiscale",
			"pressure"
		]
	},
	"abilityEmbedTitles": {
		"authorTitle": "Ability",
		"fieldEffectTitle": "Effect outside of battle"
	},
	"abilityQueryFail": "",
	"flavorsDescription": "Gets the dex entries across various games for a Pokémon.",
	"flavorsExtended": {
		"usages": [
			"Pokémon",
			"Pokémon --shiny",
			"Pokémon --back --shiny",
			"Pokémon --back"
		],
		"extendedHelp": "",
		"explainedUsage": [
			[
				"Pokémon",
				"The Pokémon for which you want to get flavour texts"
			],
			[
				"--shiny",
				"Whether the data should show the shiny sprite of the Pokémon or not. Can be combined with `--back`."
			],
			[
				"--back",
				"Whether the data should show the back sprite of the Pokémon or not. Can be combined with `--shiny`."
			]
		],
		"examples": [
			"dragonite",
			"pikachu",
			"pikachu --shiny",
			"victini --back --shiny",
			"mewtwo --back"
		]
	},
	"flavorsQueryFail": "",
	"flavorNoFlavors": "",
	"itemDescription": "Gets data for any given Pokémon item using my Pokémon dataset.",
	"itemExtended": {
		"usages": [
			"Item"
		],
		"extendedHelp": "",
		"explainedUsage": [
			[
				"Item",
				"The item for which you want to find data"
			]
		],
		"examples": [
			"life orb",
			"choice specs"
		]
	},
	"itemEmbedData": {
		"ITEM": "Item",
		"generationIntroduced": "Generation introduced",
		"availableInGeneration8Title": "Available in generation 8",
		"availableInGeneration8Data": "{{availableInGen8}}"
	},
	"itemQueryFail": "",
	"learnDescription": "Retrieves whether a given Pokémon can learn one or more given moves using my Pokémon dataset.",
	"learnExtended": {
		"usages": [
			"Pokémon Move",
			"Pokémon Move1 Move2 Move3 ...MoveX",
			"Generation Pokémon Move",
			"Generation Pokémon Move --shiny",
			"Generation Pokémon Move --shiny --back",
			"Generation Pokémon Move --back"
		],
		"extendedHelp": "",
		"explainedUsage": [
			[
				"Generation",
				"The generation for which to check the data"
			],
			[
				"Pokémon",
				"The Pokémon whose learnset you want to check"
			],
			[
				"Move1 Move2 MoveX",
				"The moves you want to check for, separated by commas"
			],
			[
				"--shiny",
				"Whether the data should show the shiny sprite of the Pokémon or not. Can be combined with `--back`."
			],
			[
				"--back",
				"Whether the data should show the back sprite of the Pokémon or not. Can be combined with `--shiny`."
			]
		],
		"examples": [
			"7 dragonite dragon dance",
			"",
			"",
			"",
			"",
			""
		]
	},
	"learnMethodTypes": {
		"levelUpMoves": "by level up at level {{level}}",
		"eventMoves": "through an event",
		"tutorMoves": "from a move tutor",
		"eggMoves": "as an eggmove",
		"virtualTransferMoves": "by transfering from virtual console games",
		"tmMoves": "by using a technical machine or technical record",
		"dreamworldMoves": "through a Dream World capture"
	},
	"learnInvalidGeneration": "",
	"learnMethod": "In generation {{generation}} {{pokemon}} __**can**__ learn **{{move}}** {{method}}",
	"learnQueryFailed": "",
	"learnCannotLearn": "",
	"learnTitle": "Learnset data for {{pokemon, toTitleCase}} in generation {{generation}}",
	"moveDescription": "Gets data for any given Pokémon move using my Pokémon dataset",
	"moveExtended": {
		"usages": [
			"Move"
		],
		"extendedHelp": "",
		"explainedUsage": [
			[
				"Move",
				"The move for which you want to find data"
			]
		],
		"examples": [
			"dragon dance",
			"GMax Wildfire",
			"Genesis Supernova"
		],
		"reminder": "Z-Move power may be shown for Generation 8 moves because it is calculated with a conversion table.\nIf Pokémon ever returns Z-Moves to the game this would be their theoretical power, however as it stands\nZ-Moves are **NOT** in Generation 8."
	},
	"moveEmbedData": {
		"move": "Move",
		"types": "Type",
		"basePower": "Base Power",
		"pp": "PP",
		"category": "Category",
		"accuracy": "Accuracy",
		"priority": "Priority",
		"target": "Target",
		"contestCondition": "Contest Condition",
		"zCrystal": "Z-Crystal",
		"gmaxPokemon": "G-MAX Pokémon",
		"availableInGeneration8Title": "Available in Generation 8",
		"availableInGeneration8Data": "{{availableInGen8}}",
		"none": "None",
		"maxMovePower": "Base power as MAX move (Dynamax)",
		"zMovePower": "Base power as Z-Move (Z-Crystal)",
		"fieldMoveEffectTitle": "Effect outside of battle"
	},
	"moveQueryFail": "",
	"pokedexDescription": "Gets data for any given Pokémon using my Pokémon dataset.",
	"pokedexExtended": {
		"usages": [
			"Pokémon",
			"Pokémon --shiny",
			"Pokémon --shiny --back",
			"Pokémon --back"
		],
		"extendedHelp": "",
		"explainedUsage": [
			[
				"Pokémon",
				"The Pokémon for which you want to find data"
			],
			[
				"--shiny",
				"Whether the data should show the shiny sprite of the Pokémon or not. Can be combined with `--back`."
			],
			[
				"--back",
				"Whether the data should show the back sprite of the Pokémon or not. Can be combined with `--shiny`."
			]
		],
		"examples": [
			"dragonite",
			"pikachu",
			"pikachu --shiny",
			"pikachu --shiny --back",
			"pikachu --back"
		],
		"reminder": "If there are any \"Other forme(s)\" on the optional fourth page, those can be requested as well.\nCosmetic Formes on that page list purely cosmetic changes and these do not have seperate entries in the Pokédex."
	},
	"pokedexEmbedData": {
		"types": "Type(s)",
		"abilities": "Abilities",
		"genderRatio": "Gender Ratio",
		"smogonTier": "Smogon Tier",
		"uknownSmogonTier": "Unknown / Alt form",
		"height": "Height",
		"weight": "Weight",
		"eggGroups": "Egg group(s)",
		"evolutionaryLine": "Evolutionary line",
		"baseStats": "Base stats",
		"baseStatsTotal": "BST",
		"evYields": "",
		"flavourText": "",
		"otherFormesTitle": "Other forme(s)",
		"cosmeticFormesTitle": "Cosmetic Formes",
		"otherFormesList": "{{otherFormes, andList}}",
		"cosmeticFormesList": "{{cosmeticFormes, andList}}",
		"levellingRate": "",
		"isEggObtainable": "",
		"minimumHatchingTime": "",
		"maximumHatchTime": ""
	},
	"pokedexQueryFail": "",
	"spriteDescription": "Gives you the sprite of a Pokémon.",
	"spriteExtended": {
		"usages": [
			"Pokémon",
			"Pokémon --shiny",
			"Pokémon --shiny --back",
			"Pokémon --back"
		],
		"extendedHelp": "",
		"explainedUsage": [
			[
				"Pokémon",
				"The Pokémon for which you want to get the sprite"
			],
			[
				"--shiny",
				"Whether the data should show the shiny sprite of the Pokémon or not. Can be combined with `--back`."
			],
			[
				"--back",
				"Whether the data should show the back sprite of the Pokémon or not. Can be combined with `--shiny`."
			]
		],
		"examples": [
			"dragonite",
			"pikachu",
			"pikachu --shiny",
			"pikachu --shiny --back",
			"pikachu --back"
		]
	},
	"typeDescription": "Gives the type matchups for one or two Pokémon types",
	"typeExtended": {
		"usages": [
			"Type",
			"Type1 Type2"
		],
		"extendedHelp": "",
		"explainedUsage": [
			[
				"Type/Type1/Type2",
				"The type(s) to look up"
			]
		],
		"examples": [
			"dragon",
			"fire flying"
		]
	},
	"typeEmbedData": {
		"offensive": "Offensive",
		"defensive": "Defensive",
		"superEffectiveAgainst": "Supereffective against",
		"dealsNormalDamageTo": "Deals normal damage to",
		"doesNotAffect": "Doesn't affect",
		"notVeryEffectiveAgainst": "Not very effective against",
		"vulnerableTo": "Vulnerable to",
		"takesNormalDamageFrom": "Takes normal damage from",
		"resists": "Resists",
		"notAffectedBy": "Not affected by",
		"typeEffectivenessFor": "Type effectiveness for {{types, andList}}"
	},
	"typeTooManyTypes": "",
	"typeNotAType": "",
	"typeQueryFail": ""
}