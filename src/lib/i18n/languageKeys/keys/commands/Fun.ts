import type { LanguageHelpDisplayOptions } from '#lib/i18n/LanguageHelp';
import { FT, T } from '#lib/types';

export const ChangeMyMindDescription = T<string>('commands/fun:changemymindDescription');
export const ChangeMyMindExtended = T<LanguageHelpDisplayOptions>('commands/fun:changemymindExtended');
export const DiceDescription = T<string>('commands/fun:diceDescription');
export const DiceExtended = T<LanguageHelpDisplayOptions>('commands/fun:diceExtended');
export const DiceOutput = FT<{ result: number }, string>('commands/fun:diceOutput');
export const DiceRollsError = T<string>('commands/fun:diceRollsError');
export const DiceSidesError = T<string>('commands/fun:diceSidesError');

export const EscapeRopeDescription = T<string>('commands/fun:escaperopeDescription');
export const EscapeRopeExtended = T<LanguageHelpDisplayOptions>('commands/fun:escaperopeExtended');
export const EscapeRopeOutput = FT<{ user: string }, string>('commands/fun:escaperopeOutput');
export const Love100 = T<string>('commands/fun:love100');
export const LoveDescription = T<string>('commands/fun:loveDescription');
export const LoveExtended = T<LanguageHelpDisplayOptions>('commands/fun:loveExtended');
export const LoveItself = T<string>('commands/fun:loveItself');
export const LoveLess100 = T<string>('commands/fun:loveLess100');
export const LoveLess45 = T<string>('commands/fun:loveLess45');
export const LoveLess75 = T<string>('commands/fun:loveLess75');
export const LoveResult = T<string>('commands/fun:loveResult');
export const PopDescription = T<string>('commands/fun:popDescription');
export const PopExtended = T<LanguageHelpDisplayOptions>('commands/fun:popExtended');
export const PopTitle = T<string>('commands/fun:popTitle');
export const PopTitleLost = T<string>('commands/fun:popTitleLost');
export const PopTitleWinner = FT<{ value: string }, string>('commands/fun:popTitleWinner');
export const RateDescription = T<string>('commands/fun:rateDescription');
export const RateExtended = T<LanguageHelpDisplayOptions>('commands/fun:rateExtended');
export const RateMyOwners = T<[string, string]>('commands/fun:rateOwners');
export const RateMyself = T<[string, string]>('commands/fun:rateMyself');
export const RateOutput = FT<{ author: string; userToRate: string; rate: number; emoji: string }, string>('commands/fun:rateOutput');
export const ShindeiruDescription = T<string>('commands/fun:shindeiruDescription');
export const ShindeiruExtended = T<LanguageHelpDisplayOptions>('commands/fun:shindeiruExtended');
export const ThinkDescription = T<string>('commands/fun:thinkDescription');
export const ThinkExtended = T<LanguageHelpDisplayOptions>('commands/fun:thinkExtended');
export const ThinkMessage = FT<{ user: string }>('commands/fun:thinkMessage');
export const WakandaDescription = T<string>('commands/fun:wakandaDescription');
export const WakandaExtended = T<LanguageHelpDisplayOptions>('commands/fun:wakandaExtended');
export const WhereDescription = T<string>('commands/fun:whereDescription');
export const WhereExtended = T<LanguageHelpDisplayOptions>('commands/fun:whereExtended');
export const WhereMessage = FT<{ user: string }>('commands/fun:whereMessage');
export const XkcdComics = FT<{ amount: number }, string>('commands/fun:xkcdComics');
export const XkcdDescription = T<string>('commands/fun:xkcdDescription');
export const XkcdExtended = T<LanguageHelpDisplayOptions>('commands/fun:xkcdExtended');
export const XkcdNotFound = T<string>('commands/fun:xkcdNotfound');
