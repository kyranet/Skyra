import { FT, T } from '#lib/types';

export const ChannelCreate = T<string>('events/guild-logs:channelCreate');
export const ChannelCreateName = FT<{ value: string }, string>('events/guild-logs:channelCreateName');
export const ChannelCreateParent = FT<{ value: string }, string>('events/guild-logs:channelCreateParent');
export const ChannelCreatePosition = FT<{ value: number }, string>('events/guild-logs:channelCreatePosition');
export const ChannelCreateNsfw = FT<{ value: string }, string>('events/guild-logs:channelCreateNsfw');
export const ChannelCreateTopic = FT<{ value: string }, string>('events/guild-logs:channelCreateTopic');
export const ChannelCreateRateLimit = FT<{ value: number }, string>('events/guild-logs:channelCreateRateLimit');
export const ChannelCreateBitrate = FT<{ value: number }, string>('events/guild-logs:channelCreateBitrate');
export const ChannelCreateUserLimit = FT<{ value: number }, string>('events/guild-logs:channelCreateUserLimit');
export const ChannelUpdate = T<string>('events/guild-logs:channelUpdate');
export const ChannelUpdateBitrate = FT<{ previous: number; next: number }, string>('events/guild-logs:channelUpdateBitrate');
export const ChannelUpdateName = FT<{ previous: string; next: string }, string>('events/guild-logs:channelUpdateName');
export const ChannelUpdateNsfw = FT<{ previous: string; next: string }, string>('events/guild-logs:channelUpdateNsfw');
export const ChannelUpdateParent = FT<{ previous: string; next: string }, string>('events/guild-logs:channelUpdateParent');
export const ChannelUpdateParentAdded = FT<{ channel: string }, string>('events/guild-logs:channelUpdateParentAdded');
export const ChannelUpdateParentRemoved = FT<{ channel: string }, string>('events/guild-logs:channelUpdateParentRemoved');
export const ChannelUpdatePosition = FT<{ previous: number; next: number }, string>('events/guild-logs:channelUpdatePosition');
export const ChannelUpdateRateLimit = FT<{ previous: number; next: number }, string>('events/guild-logs:channelUpdateRateLimit');
export const ChannelUpdateRateLimitAdded = FT<{ rateLimit: number }, string>('events/guild-logs:channelUpdateRateLimitAdded');
export const ChannelUpdateRateLimitRemoved = FT<{ rateLimit: number }, string>('events/guild-logs:channelUpdateRateLimitRemoved');
export const ChannelUpdateTopic = FT<{ previous: string; next: string }, string>('events/guild-logs:channelUpdateTopic');
export const ChannelUpdateTopicAdded = FT<{ topic: string }, string>('events/guild-logs:channelUpdateTopicAdded');
export const ChannelUpdateTopicRemoved = FT<{ topic: string }, string>('events/guild-logs:channelUpdateTopicRemoved');
export const ChannelUpdateType = FT<{ previous: string; next: string }, string>('events/guild-logs:channelUpdateType');
export const ChannelUpdateUserLimit = FT<{ previous: number; next: number }, string>('events/guild-logs:channelUpdateUserLimit');
export const ChannelUpdateUserLimitAdded = FT<{ userLimit: string }, string>('events/guild-logs:channelUpdateUserLimitAdded');
export const ChannelUpdateUserLimitRemoved = FT<{ userLimit: string }, string>('events/guild-logs:channelUpdateUserLimitRemoved');
export const EmojiUpdate = T<string>('events/guild-logs:emojiUpdate');
export const EmojiUpdateAnimated = FT<{ previous: string; next: string }, string>('events/guild-logs:emojiUpdateAnimated');
export const EmojiUpdateAvailable = FT<{ previous: string; next: string }, string>('events/guild-logs:emojiUpdateAvailable');
export const EmojiUpdateManaged = FT<{ previous: string; next: string }, string>('events/guild-logs:emojiUpdateManaged');
export const EmojiUpdateName = FT<{ previous: string; next: string }, string>('events/guild-logs:emojiUpdateName');
export const EmojiUpdateRequiresColons = FT<{ previous: string; next: string }, string>('events/guild-logs:emojiUpdateRequiresColons');
export const EmojiUpdateRolesAdded = FT<{ roles: string[]; count: number }, string>('events/guild-logs:emojiUpdateRolesAdded');
export const EmojiUpdateRolesRemoved = FT<{ roles: string[]; count: number }, string>('events/guild-logs:emojiUpdateRolesRemoved');
export const RoleCreate = T<string>('events/guild-logs:roleCreate');
export const RoleCreateColor = FT<{ value: string }, string>('events/guild-logs:roleCreateColor');
export const RoleCreateHoist = T<string>('events/guild-logs:roleCreateHoist');
export const RoleCreateMentionable = T<string>('events/guild-logs:roleCreateMentionable');
export const RoleCreateName = FT<{ value: string }, string>('events/guild-logs:roleCreateName');
export const RoleCreatePermissions = FT<{ permissions: string[]; count: number }, string>('events/guilds-logs:roleCreatePermissions');
export const RoleCreatePosition = FT<{ value: number }, string>('events/guild-logs:roleCreatePosition');
export const RoleUpdate = T<string>('events/guilds-logs:roleUpdate');
export const RoleUpdateColor = FT<{ previous: string; next: string }, string>('events/guilds-logs:roleUpdateColor');
export const RoleUpdateHoist = FT<{ previous: string; next: string }, string>('events/guilds-logs:roleUpdateHoist');
export const RoleUpdateMentionable = FT<{ previous: string; next: string }, string>('events/guilds-logs:roleUpdateMentionable');
export const RoleUpdateName = FT<{ previous: string; next: string }, string>('events/guilds-logs:roleUpdateName');
export const RoleUpdatePermissionsAdded = FT<{ permissions: string[]; count: number }, string>('events/guilds-logs:roleUpdatePermissionsAdded');
export const RoleUpdatePermissionsRemoved = FT<{ permissions: string[]; count: number }, string>('events/guilds-logs:roleUpdatePermissionsRemoved');
export const RoleUpdatePosition = FT<{ previous: number; next: number }, string>('events/guilds-logs:roleUpdatePosition');
