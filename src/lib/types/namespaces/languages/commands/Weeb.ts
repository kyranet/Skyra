import { T } from '@lib/types/Shared';
import { LanguageHelpDisplayOptions } from '@utils/LanguageHelp';

export const Bang = T<(params: { user: string }) => string>('commandWbang');
export const BangDescription = T<string>('commandWbangDescription');
export const BangExtended = T<LanguageHelpDisplayOptions>('commandWbangExtended');
export const Banghead = T<string>('commandWbanghead');
export const BangheadDescription = T<string>('commandWbangheadDescription');
export const BangheadExtended = T<LanguageHelpDisplayOptions>('commandWbangheadExtended');
export const Bite = T<(params: { user: string }) => string>('commandWbite');
export const BiteDescription = T<string>('commandWbiteDescription');
export const BiteExtended = T<LanguageHelpDisplayOptions>('commandWbiteExtended');
export const Blush = T<string>('commandWblush');
export const BlushDescription = T<string>('commandWblushDescription');
export const BlushExtended = T<LanguageHelpDisplayOptions>('commandWblushExtended');
export const Cry = T<(params: { user: string }) => string>('commandWcry');
export const CryDescription = T<string>('commandWcryDescription');
export const CryExtended = T<LanguageHelpDisplayOptions>('commandWcryExtended');
export const Cuddle = T<(params: { user: string }) => string>('commandWcuddle');
export const CuddleDescription = T<string>('commandWcuddleDescription');
export const CuddleExtended = T<LanguageHelpDisplayOptions>('commandWcuddleExtended');
export const Dance = T<string>('commandWdance');
export const DanceDescription = T<string>('commandWdanceDescription');
export const DanceExtended = T<LanguageHelpDisplayOptions>('commandWdanceExtended');
export const Greet = T<(params: { user: string }) => string>('commandWgreet');
export const GreetDescription = T<string>('commandWgreetDescription');
export const GreetExtended = T<LanguageHelpDisplayOptions>('commandWgreetExtended');
export const Hug = T<(params: { user: string }) => string>('commandWhug');
export const HugDescription = T<string>('commandWhugDescription');
export const HugExtended = T<LanguageHelpDisplayOptions>('commandWhugExtended');
export const Kiss = T<(params: { user: string }) => string>('commandWkiss');
export const KissDescription = T<string>('commandWkissDescription');
export const KissExtended = T<LanguageHelpDisplayOptions>('commandWkissExtended');
export const Lewd = T<string>('commandWlewd');
export const LewdDescription = T<string>('commandWlewdDescription');
export const LewdExtended = T<LanguageHelpDisplayOptions>('commandWlewdExtended');
export const Lick = T<(params: { user: string }) => string>('commandWlick');
export const LickDescription = T<string>('commandWlickDescription');
export const LickExtended = T<LanguageHelpDisplayOptions>('commandWlickExtended');
export const Neko = T<string>('commandWneko');
export const NekoDescription = T<string>('commandWnekoDescription');
export const NekoExtended = T<LanguageHelpDisplayOptions>('commandWnekoExtended');
export const Nom = T<string>('commandWnom');
export const NomDescription = T<string>('commandWnomDescription');
export const NomExtended = T<LanguageHelpDisplayOptions>('commandWnomExtended');
export const Pat = T<(params: { user: string }) => string>('commandWpat');
export const PatDescription = T<string>('commandWpatDescription');
export const PatExtended = T<LanguageHelpDisplayOptions>('commandWpatExtended');
export const Pout = T<string>('commandWpout');
export const PoutDescription = T<string>('commandWpoutDescription');
export const PoutExtended = T<LanguageHelpDisplayOptions>('commandWpoutExtended');
export const Punch = T<(params: { user: string }) => string>('commandWpunch');
export const PunchDescription = T<string>('commandWpunchDescription');
export const PunchExtended = T<LanguageHelpDisplayOptions>('commandWpunchExtended');
export const Slap = T<(params: { user: string }) => string>('commandWslap');
export const SlapDescription = T<string>('commandWslapDescription');
export const SlapExtended = T<LanguageHelpDisplayOptions>('commandWslapExtended');
export const Sleepy = T<string>('commandWsleepy');
export const SleepyDescription = T<string>('commandWsleepyDescription');
export const SleepyExtended = T<LanguageHelpDisplayOptions>('commandWsleepyExtended');
export const Smile = T<string>('commandWsmile');
export const SmileDescription = T<string>('commandWsmileDescription');
export const SmileExtended = T<LanguageHelpDisplayOptions>('commandWsmileExtended');
export const Smug = T<string>('commandWsmug');
export const SmugDescription = T<string>('commandWsmugDescription');
export const SmugExtended = T<LanguageHelpDisplayOptions>('commandWsmugExtended');
export const Stare = T<(params: { user: string }) => string>('commandWstare');
export const StareDescription = T<string>('commandWstareDescription');
export const StareExtended = T<LanguageHelpDisplayOptions>('commandWstareExtended');
export const Thumbsup = T<string>('commandWthumbsup');
export const ThumbsupDescription = T<string>('commandWthumbsupDescription');
export const ThumbsupExtended = T<LanguageHelpDisplayOptions>('commandWthumbsupExtended');
export const Tickle = T<(params: { user: string }) => string>('commandWtickle');
export const TickleDescription = T<string>('commandWtickleDescription');
export const TickleExtended = T<LanguageHelpDisplayOptions>('commandWtickleExtended');
