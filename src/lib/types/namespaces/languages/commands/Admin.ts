import { FT, T } from '@lib/types/Shared';
import { LanguageHelpDisplayOptions } from '@utils/LanguageHelp';

export const BlocklistDescription = T<string>('commandBlocklistDescription');
export const BlocklistSaveSuccess = T<string>('commandBlocklistSaveSuccess');
export const BlocklistResetSuccess = T<string>('commandBlocklistResetSuccess');
export const ConfNoKey = T<string>('commandConfNoKey');
export const ConfNoValue = T<string>('commandConfNoValue');
export const ConfGuarded = FT<{ name: string }, string>('commandConfGuarded');
export const ConfUpdated = FT<{ key: string; response: string }, string>('commandConfUpdated');
export const ConfKeyNotArray = T<string>('commandConfKeyNotArray');
export const ConfGetNoExt = FT<{ key: string }, string>('commandConfGetNoExt');
export const ConfGet = FT<{ key: string; value: string }, string>('commandConfGet');
export const ConfReset = FT<{ key: string; value: string }, string>('commandConfReset');
export const ConfNochange = FT<{ key: string }, string>('commandConfNochange');
export const ConfServerDescription = T<string>('commandConfServerDescription');
export const ConfServer = FT<{ key: string; list: string }, string>('commandConfServer');
export const ConfUserDescription = T<string>('commandConfUserDescription');
export const ConfUser = FT<{ key: string; list: string }, string>('commandConfUser');
export const ConfSettingNotSet = T<string>('commandConfSettingNotSet');
export const RolesetDescription = T<string>('commandRolesetDescription');
export const RolesetExtended = T<LanguageHelpDisplayOptions>('commandRolesetExtended');
export const RolesetCreated = FT<{ name: string; roles: string }, string>('commandRolesetCreated');
export const RolesetAdded = FT<{ name: string; roles: string }, string>('commandRolesetAdded');
export const RolesetInvalidName = FT<{ name: string }, string>('commandRolesetInvalidName');
export const RolesetRemoved = FT<{ name: string; roles: string }, string>('commandRolesetRemoved');
export const RolesetResetEmpty = T<string>('commandRolesetResetEmpty');
export const RolesetResetAll = T<string>('commandRolesetResetAll');
export const RolesetResetNotExists = FT<{ name: string }, string>('commandRolesetResetNotExists');
export const RolesetResetGroup = FT<{ name: string }, string>('commandRolesetResetGroup');
export const RolesetUpdated = FT<{ name: string }, string>('commandRolesetUpdated');
export const RolesetNoRolesets = T<string>('commandRolesetNoRolesets');
export const ConfMenuNopermissions = T<string>('commandConfMenuNopermissions');
export const ConfMenuRenderAtFolder = FT<{ path: string }, string>('commandConfMenuRenderAtFolder');
export const ConfMenuRenderAtPiece = FT<{ path: string }, string>('commandConfMenuRenderAtPiece');
export const ConfMenuRenderNokeys = T<string>('commandConfMenuRenderNokeys');
export const ConfMenuRenderSelect = T<string>('commandConfMenuRenderSelect');
export const ConfMenuRenderTctitle = T<string>('commandConfMenuRenderTctitle');
export const ConfMenuRenderUpdate = T<string>('commandConfMenuRenderUpdate');
export const ConfMenuRenderRemove = T<string>('commandConfMenuRenderRemove');
export const ConfMenuRenderReset = T<string>('commandConfMenuRenderReset');
export const ConfMenuRenderUndo = T<string>('commandConfMenuRenderUndo');
export const ConfMenuRenderCvalue = FT<{ value: string }, string>('commandConfMenuRenderCvalue');
export const ConfMenuRenderBack = T<string>('commandConfMenuRenderBack');
export const ConfMenuInvalidKey = T<string>('commandConfMenuInvalidKey');
export const ConfMenuInvalidAction = T<string>('commandConfMenuInvalidAction');
export const ConfMenuSaved = T<string>('commandConfMenuSaved');
