{
	// Place your Skyra workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	"SkyraCommand": {
		"scope": "typescript",
		"prefix": "command",
		"body": [
			"import { SkyraCommand, SkyraCommandOptions } from '@lib/structures/SkyraCommand';",
			"import { ApplyOptions } from '@skyra/decorators';",
			"import { KlasaMessage } from 'klasa';",
			"",
			"@ApplyOptions<SkyraCommandOptions>({",
			"\tcooldown: 10,",
			"\tdescription: language => language.tget('COMMAND_${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_DESCRIPTION'),",
			"\textendedHelp: language => language.tget('COMMAND_${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_EXTENDED'),",
			"\trequiredGuildPermissions: [$3],",
			"\tusage: '$4',",
			"\tusageDelim: ' '",
            "})",
			"export default class extends SkyraCommand {",
			"",
			"\tpublic async run(message: KlasaMessage, [$5]: [$6]) {",
			"\t\treturn $7;",
			"\t}",
			"",
			"}",
			""
		],
		"description": "Creates a SkyraCommand"
	}
}
