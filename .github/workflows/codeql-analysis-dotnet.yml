name: Code Scanning - .NET

on:
  push:
    branches:
      - main
    paths:
      - services/**
      - .github/workflows/codeql-analysis-dotnet.yml
      - .github/workflows/continuous-integration-dotnet.yml
  pull_request:
    paths:
      - services/**
      - .github/workflows/codeql-analysis-dotnet.yml
      - .github/workflows/continuous-integration-dotnet.yml

jobs:
  pre_ci:
    name: Prepare CI environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

        # If this workflow was triggered by a push then resolve the commit message from HEAD
        # It is stored in output steps, to be referenced with ${{ steps.push_get_commit_message.outputs.push_commit_message }}
      - name: '[Push] Get commit message'
        if: github.event_name == 'push'
        id: push_get_commit_message
        run: echo ::set-output name=push_commit_message::$(git log --format=%B -n 1 HEAD)

        # If this workflow was triggered by a pull request (open or synchronize!) then resolve the commit message from HEAD^2
        # It is stored in output steps, to be referenced with ${{ steps.pr_get_commit_message.outputs.pr_commit_message }}
      - name: '[Pull Request] Get commit message'
        if: github.event_name == 'pull_request'
        id: pr_get_commit_message
        run: echo ::set-output name=pr_commit_message::$(git log --format=%B -n 1 HEAD^2)

    # Finally we want to make the commit message available to other jobs. This can be done with job-level outputs
    # However as we do not know whether the commit message was set in Push or Pull Request event we need to do some
    # bash magic to resolve the one or the other
    #
    # For **Pull Request** events this will resolve to something like "$( [ -z "commit message pr" ] && echo "" || echo "commit message pr" )" which then resolves to just "commit message pr"
    #
    # For **Push** events this will resolve to something like "$( [ -z "" ] && echo "commit message push"  || echo "" )" which then resolves to just "commit message push"
    outputs:
      commit_message: $( [ -z "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" ] && echo "${{ steps.push_get_commit_message.outputs.push_commit_message }}" || echo "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" )

  CodeQL:
    runs-on: ubuntu-latest
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"
    needs: pre_ci

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: csharp

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Restore CI Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('services/**/packages.lock.json') }}

      - name: Build .NET code
        run: dotnet build services

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
